{"ast":null,"code":"var _jsxFileName = \"/Users/marekl/Documents/React Kurz/FoodOrderApp/01-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/marekl/Documents/React Kurz/FoodOrderApp/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AAC1B,UAAMC,kBAAkB,GACvBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADrD;AAEA,UAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACG,IAA1B,CAArB;AAEA,WAAO;AACNP,MAAAA,KAAK,EAAEU,YADD;AAENT,MAAAA,WAAW,EAAEK;AAFP,KAAP;AAIA;;AACD,SAAOP,gBAAP;AACA,CAZD;;AAcA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CACjDK,WADiD,EAEjDH,gBAFiD,CAAlD;;AAKA,QAAMiB,oBAAoB,GAAGT,IAAI,IAAI;AACpCQ,IAAAA,kBAAkB,CAAC;AAClBV,MAAAA,IAAI,EAAE,KADY;AAElBE,MAAAA,IAAI,EAAEA;AAFY,KAAD,CAAlB;AAIA,GALD;;AAOA,QAAMU,yBAAyB,GAAGC,EAAE,IAAI;AACvCH,IAAAA,kBAAkB,CAAC;AAClBV,MAAAA,IAAI,EAAE,QADY;AAElBa,MAAAA,EAAE,EAAEA;AAFc,KAAD,CAAlB;AAIA,GALD;;AAOA,QAAMC,WAAW,GAAG;AACnBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADE;AAEnBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFJ;AAGnBmB,IAAAA,OAAO,EAAEJ,oBAHU;AAInBK,IAAAA,UAAU,EAAEJ;AAJO,GAApB;AAOA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACEN,KAAK,CAACS;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAhCD;;GAAMV,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n\titems: [],\n\ttotalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n\tif (action.type === 'ADD') {\n\t\tconst updatedTotalAmount =\n\t\t\tstate.totalAmount + action.item.price * action.item.amount;\n\t\tconst updatedItems = state.items.concat(action.item);\n\n\t\treturn {\n\t\t\titems: updatedItems,\n\t\t\ttotalAmount: updatedTotalAmount,\n\t\t};\n\t}\n\treturn defaultCartState;\n};\n\nconst CartProvider = props => {\n\tconst [cartState, dispatchCartAction] = useReducer(\n\t\tcartReducer,\n\t\tdefaultCartState\n\t);\n\n\tconst addItemToCartHandler = item => {\n\t\tdispatchCartAction({\n\t\t\ttype: 'ADD',\n\t\t\titem: item,\n\t\t});\n\t};\n\n\tconst removeItemFromCartHandler = id => {\n\t\tdispatchCartAction({\n\t\t\ttype: 'REMOVE',\n\t\t\tid: id,\n\t\t});\n\t};\n\n\tconst cartContext = {\n\t\titems: cartState.items,\n\t\ttotalAmount: cartState.totalAmount,\n\t\taddItem: addItemToCartHandler,\n\t\tremoveItem: removeItemFromCartHandler,\n\t};\n\n\treturn (\n\t\t<CartContext.Provider value={cartContext}>\n\t\t\t{props.children}\n\t\t</CartContext.Provider>\n\t);\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}